"""separated Insured and Dependent classes/tables

Revision ID: 7546e1c647c5
Revises: 72865ec2589c
Create Date: 2018-02-23 07:40:53.455978

"""

# revision identifiers, used by Alembic.
revision = '7546e1c647c5'
down_revision = '72865ec2589c'

from alembic import op
import sqlalchemy as sa


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('dependent',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('insured_id', sa.Integer(), nullable=True),
    sa.Column('first_name', sa.String(length=64), nullable=True),
    sa.Column('middle_name', sa.String(length=64), nullable=True),
    sa.Column('last_name', sa.String(length=64), nullable=True),
    sa.Column('relationship_to_insured', sa.Integer(), nullable=True),
    sa.Column('date_of_birth', sa.Date(), nullable=True),
    sa.Column('gender', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['insured_id'], ['insured.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('profile')
    op.add_column('claim', sa.Column('dependent_id', sa.Integer(), nullable=True))
    op.add_column('claim', sa.Column('insured_id', sa.Integer(), nullable=True))
    op.drop_constraint('claim_user_id_fkey', 'claim', type_='foreignkey')
    op.create_foreign_key(None, 'claim', 'insured', ['insured_id'], ['id'])
    op.create_foreign_key(None, 'claim', 'dependent', ['dependent_id'], ['id'])
    op.drop_column('claim', 'user_id')
    op.add_column('insured', sa.Column('date_of_birth', sa.Date(), nullable=True))
    op.add_column('insured', sa.Column('first_name', sa.String(length=64), nullable=True))
    op.add_column('insured', sa.Column('gender', sa.Integer(), nullable=True))
    op.add_column('insured', sa.Column('last_name', sa.String(length=64), nullable=True))
    op.add_column('insured', sa.Column('middle_name', sa.String(length=64), nullable=True))
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('insured', 'middle_name')
    op.drop_column('insured', 'last_name')
    op.drop_column('insured', 'gender')
    op.drop_column('insured', 'first_name')
    op.drop_column('insured', 'date_of_birth')
    op.add_column('claim', sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'claim', type_='foreignkey')
    op.drop_constraint(None, 'claim', type_='foreignkey')
    op.create_foreign_key('claim_user_id_fkey', 'claim', 'insured', ['user_id'], ['id'])
    op.drop_column('claim', 'insured_id')
    op.drop_column('claim', 'dependent_id')
    op.create_table('profile',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('insured_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('first_name', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
    sa.Column('middle_name', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
    sa.Column('last_name', sa.VARCHAR(length=64), autoincrement=False, nullable=True),
    sa.Column('relationship_to_employee', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('date_of_birth', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('gender', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['insured_id'], ['insured.id'], name='profile_insured_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='profile_pkey')
    )
    op.drop_table('dependent')
    # ### end Alembic commands ###
